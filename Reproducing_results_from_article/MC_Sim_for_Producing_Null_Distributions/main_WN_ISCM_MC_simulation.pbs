### Generate White Noise ISCMs (WN_ISCM) for the statistical test. Runs in a HPC cluster. 
### This file should be re-saved as a .pbs file, and dos2unix formatting may be required
### to run this script on Linux.

#PBS -l walltime=01:00:00
#PBS -l select=1:ncpus=10:mem=120gb
#PBS -J 1-1000
###100

## RNG parameters and random sequence length
## 8544922 samples -> 350 s @ at Fs of 24414... Hz
## 9765625 samples -> 400 s.
## 12207031 samples -> 500 s.
signal_length=12207031 ## SET SIGNAL LENGTH HERE IN SAMPLES (E.G. 500S X 24414.. HZ = 12207031)
seed_1=1 ## The RNG state constant, can be any arbitrary constant but should be fixed across jobs for ease of reproduction

## Navigate to RNG folder
cd "$HOME/Functions/random_PCG/random_PCG_attempt/" ##  THE C FUNCTIONS FOR PCG RANDOM NUMBER GENERATION SHOULD BE PLACED HERE, OR THIS PATH SHOULD BE RENAMED
 
## Generate and store random sequence
seed_2=$PBS_ARRAY_INDEX+$signal_length # RNG sequence index
myShellVar=`./to_shell_rand_pcg32 $signal_length $seed_1 $seed_2` # Generate random sequence
echo "${myShellVar}" > "_PCG_random_numbers_$((seed_2)).txt" # Write results to text file

## Navigate to home folder
cd "$HOME"

##Load needed modules
module load fix_sysconf
export OMP_NUM_THREADS=10
module load matlab/R2020a ## or whatever version of MATLAB

export MATLAB_PREFDIR=$TMPDIR/prefs
export FUNCS_DIR=$HOME/Functions ## folder with MATLAB functions

## MATLAB code: set nb of cores, cast random sequence as variable and launch WN_ISCM function
matlab -nosplash -nodesktop -nodisplay -r "fprintf(['MATLAB LOADED, ',num2str(getenv('OMP_NUM_THREADS')),' \n']); LASTN = maxNumCompThreads(str2num(getenv('OMP_NUM_THREADS'))); N = maxNumCompThreads(); fprintf(['Number of cores: ',num2str(N),'\n']); fprintf(['Previous no of cores: ',num2str(LASTN),'\n']); addpath(genpath(getenv('FUNCS_DIR'))); [WI_ISCM_individual,f] = generate_WN_ISCMs(str2num('$seed_1'),str2num('$seed_2')); quit"

